<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.soft.dao.GarbageOrderMapper" >
  <resultMap id="BaseResultMap" type="com.soft.model.GarbageOrder" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="addressId" property="addressid" jdbcType="INTEGER" />
    <result column="garbageName" property="garbagename" jdbcType="VARCHAR" />
    <result column="garbageTypeId" property="garbagetypeid" jdbcType="VARCHAR" />
    <result column="weight" property="weight" jdbcType="DOUBLE" />
    <result column="money" property="money" jdbcType="DOUBLE" />
    <result column="appointmentTime" property="appointmenttime" jdbcType="TIMESTAMP" />
    <result column="startTime" property="starttime" jdbcType="TIMESTAMP" />
    <result column="endTime" property="endtime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, userId, addressId, garbageName, garbageTypeId, weight, money, appointmentTime, 
    startTime, endTime, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.soft.model.GarbageOrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from garbageOrder
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from garbageOrder
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from garbageOrder
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.soft.model.GarbageOrderExample" >
    delete from garbageOrder
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.soft.model.GarbageOrder" >
    insert into garbageOrder (id, userId, addressId, 
      garbageName, garbageTypeId, weight, 
      money, appointmentTime, startTime, 
      endTime, status)
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{addressid,jdbcType=INTEGER}, 
      #{garbagename,jdbcType=VARCHAR}, #{garbagetypeid,jdbcType=VARCHAR}, #{weight,jdbcType=DOUBLE},
      #{money,jdbcType=DOUBLE}, #{appointmenttime,jdbcType=TIMESTAMP}, #{starttime,jdbcType=TIMESTAMP}, 
      #{endtime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.soft.model.GarbageOrder" >
    insert into garbageOrder
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="addressid != null" >
        addressId,
      </if>
      <if test="garbagename != null" >
        garbageName,
      </if>
      <if test="garbagetypeid != null" >
        garbageTypeId,
      </if>
      <if test="weight != null" >
        weight,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="appointmenttime != null" >
        appointmentTime,
      </if>
      <if test="starttime != null" >
        startTime,
      </if>
      <if test="endtime != null" >
        endTime,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="addressid != null" >
        #{addressid,jdbcType=INTEGER},
      </if>
      <if test="garbagename != null" >
        #{garbagename,jdbcType=VARCHAR},
      </if>
      <if test="garbagetypeid != null" >
        #{garbagetypeid,jdbcType=VARCHAR},
      </if>
      <if test="weight != null" >
        #{weight,jdbcType=DOUBLE},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="appointmenttime != null" >
        #{appointmenttime,jdbcType=TIMESTAMP},
      </if>
      <if test="starttime != null" >
        #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null" >
        #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.soft.model.GarbageOrderExample" resultType="java.lang.Integer" >
    select count(*) from garbageOrder
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update garbageOrder
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.addressid != null" >
        addressId = #{record.addressid,jdbcType=INTEGER},
      </if>
      <if test="record.garbagename != null" >
        garbageName = #{record.garbagename,jdbcType=VARCHAR},
      </if>
      <if test="record.garbagetypeid != null" >
        garbageTypeId = #{record.garbagetypeid,jdbcType=VARCHAR},
      </if>
      <if test="record.weight != null" >
        weight = #{record.weight,jdbcType=DOUBLE},
      </if>
      <if test="record.money != null" >
        money = #{record.money,jdbcType=DOUBLE},
      </if>
      <if test="record.appointmenttime != null" >
        appointmentTime = #{record.appointmenttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.starttime != null" >
        startTime = #{record.starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endtime != null" >
        endTime = #{record.endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update garbageOrder
    set id = #{record.id,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      addressId = #{record.addressid,jdbcType=INTEGER},
      garbageName = #{record.garbagename,jdbcType=VARCHAR},
      garbageTypeId = #{record.garbagetypeid,jdbcType=VARCHAR},
      weight = #{record.weight,jdbcType=DOUBLE},
      money = #{record.money,jdbcType=DOUBLE},
      appointmentTime = #{record.appointmenttime,jdbcType=TIMESTAMP},
      startTime = #{record.starttime,jdbcType=TIMESTAMP},
      endTime = #{record.endtime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.soft.model.GarbageOrder" >
    update garbageOrder
    <set >
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="addressid != null" >
        addressId = #{addressid,jdbcType=INTEGER},
      </if>
      <if test="garbagename != null" >
        garbageName = #{garbagename,jdbcType=VARCHAR},
      </if>
      <if test="garbagetypeid != null" >
        garbageTypeId = #{garbagetypeid,jdbcType=CARCHAR},
      </if>
      <if test="weight != null" >
        weight = #{weight,jdbcType=DOUBLE},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="appointmenttime != null" >
        appointmentTime = #{appointmenttime,jdbcType=TIMESTAMP},
      </if>
      <if test="starttime != null" >
        startTime = #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null" >
        endTime = #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.soft.model.GarbageOrder" >
    update garbageOrder
    set userId = #{userid,jdbcType=INTEGER},
      addressId = #{addressid,jdbcType=INTEGER},
      garbageName = #{garbagename,jdbcType=VARCHAR},
      garbageTypeId = #{garbagetypeid,jdbcType=VARCHAR},
      weight = #{weight,jdbcType=DOUBLE},
      money = #{money,jdbcType=DOUBLE},
      appointmentTime = #{appointmenttime,jdbcType=TIMESTAMP},
      startTime = #{starttime,jdbcType=TIMESTAMP},
      endTime = #{endtime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>